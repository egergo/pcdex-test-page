{"version":3,"sources":["utils/crypto.js","utils/base64.js","pcdex/verifyResponse.js","components/TextWithExplanation.js","components/ResponseWithExplanation.js","components/Client.js","pcdex/createResponse.js","components/ResponseDebugInfo.js","components/Server.js","components/Shared.js","index.js"],"names":["hkdfSimpleSha256","ikm","salt","a","isArrayBuffer","Error","crypto","subtle","importKey","name","hash","saltAsKey","sign","derivedKey","hmacSha256","key","value","importedKey","valueBuffer","TextEncoder","encode","mac","randomNonce256","getRandomValues","Uint8Array","aesCbcEncrypt","importedValue","iv","encrypt","encrypted","aesCbcDecrypt","decrypt","decrypted","TextDecoder","decode","o","ArrayBuffer","isView","toBase64","buffer","binary","bytes","len","byteLength","i","String","fromCharCode","window","btoa","fromBase64","base64","binary_string","atob","length","charCodeAt","verifyResponse","masterKeyId","masterKeySecret","phoneNumber","info","encryptedHeaders","result","split","protoHeader","usedMasterKeyId","encryptionSalt","usedInfo","usedMaskedPhoneNumber","insensitiveMacSalt","usedInsensitiveMac","encryptedPhoneNumber","sensitiveMacSalt","usedSensitiveMac","addResult","addResult256BitBase64","masterKeySecretBuffer","insensitive","insensitiveMacKey","insensitiveMac","push","ok","expected","insensitiveSigned","sensitive","sensitiveMacKey","sensitiveMac","decryptionKey","usedPhoneNumber","maskedPhoneNumber","slice","ex","decoded","TextWithExplanation","handleMouseEnter","setState","hovered","handleMouseLeave","handleClick","modalOpen","handleClose","state","this","props","header","body","color","textDecoration","onMouseEnter","onMouseLeave","onClick","style","cursor","children","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Component","ResponseWithExplanation","response","className","Explanation","others","Client","handleChange","event","target","verifyEncrypted","prevProps","prevState","InputGroup","Prepend","Text","FormControl","as","rows","onChange","Results","map","line","Result","icon","faCheck","faTimes","colorClass","text","readOnly","Append","createResponse","encryptionKey","sensitiveSigned","debugInfo","ResponseDebugInfo","code","description","Field","Form","Server","handlePhoneNumberChange","fireOnChange","handleInfoChange","handleEncryptClick","preventDefault","defaultPhoneNumber","defaultInfo","id","Control","type","Shared","handleMasterKeyIdChange","handleMasterKeySecretChange","defaultMasterKeyId","defaultMasterKeySecret","App","handleSharedChange","handleServerChange","Container","Row","Col","render","document","getElementById"],"mappings":"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","file":"static/js/main.96870348.chunk.js","sourcesContent":["export async function hkdfSimpleSha256(ikm, salt) {\n  if (!isArrayBuffer(ikm)) {\n    throw new Error(\"ikm must be an ArrayBuffer\");\n  }\n\n  if (!isArrayBuffer(salt)) {\n    throw new Error(\"salt must be an ArrayBuffer\");\n  }\n\n  const saltAsKey = await crypto.subtle.importKey(\n    \"raw\",\n    salt,\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    true,\n    [\"sign\"]\n  );\n\n  const derivedKey = await crypto.subtle.sign(\"HMAC\", saltAsKey, ikm);\n  return derivedKey;\n}\n\nexport async function hmacSha256(key, value) {\n  if (!isArrayBuffer(key)) {\n    throw new Error(\"key must be an ArrayBuffer\");\n  }\n\n  const importedKey = await crypto.subtle.importKey(\n    \"raw\",\n    key,\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    true,\n    [\"sign\"]\n  );\n  const valueBuffer = new TextEncoder(\"utf-8\").encode(value);\n  const mac = await crypto.subtle.sign(\"HMAC\", importedKey, valueBuffer);\n  return mac;\n}\n\nexport async function randomNonce256() {\n  return crypto.getRandomValues(new Uint8Array(32));\n}\n\nexport async function aesCbcEncrypt(key, value) {\n  const importedKey = await crypto.subtle.importKey(\n    \"raw\",\n    key,\n    { name: \"AES-CBC\" },\n    true,\n    [\"encrypt\"]\n  );\n  const importedValue = new TextEncoder(\"utf-8\").encode(value);\n  const iv = await crypto.getRandomValues(new Uint8Array(16));\n  const encrypted = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    importedKey,\n    importedValue\n  );\n  return { iv, encrypted };\n}\n\nexport async function aesCbcDecrypt(key, iv, value) {\n  const importedKey = await crypto.subtle.importKey(\n    \"raw\",\n    key,\n    { name: \"AES-CBC\" },\n    true,\n    [\"decrypt\"]\n  );\n  const decrypted = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    importedKey,\n    value\n  );\n  return new TextDecoder().decode(decrypted);\n}\n\nfunction isArrayBuffer(o) {\n  return !!(o instanceof ArrayBuffer || ArrayBuffer.isView(o));\n}\n","export function toBase64(buffer) {\n  var binary = \"\";\n  var bytes = new Uint8Array(buffer);\n  var len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\nexport function fromBase64(base64) {\n  var binary_string = window.atob(base64);\n  var len = binary_string.length;\n  var bytes = new Uint8Array(len);\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes;\n}\n","import { hkdfSimpleSha256, hmacSha256, aesCbcDecrypt } from \"../utils/crypto\";\nimport { toBase64, fromBase64 } from \"../utils/base64\";\n\nexport async function verifyResponse({\n  masterKeyId,\n  masterKeySecret,\n  phoneNumber,\n  info,\n  encryptedHeaders\n}) {\n  const result = [];\n\n  const [\n    protoHeader,\n    usedMasterKeyId,\n    encryptionSalt,\n    usedInfo,\n    usedMaskedPhoneNumber,\n    insensitiveMacSalt,\n    usedInsensitiveMac,\n    iv,\n    encryptedPhoneNumber,\n    sensitiveMacSalt,\n    usedSensitiveMac\n  ] = encryptedHeaders.split(\"|\");\n\n  addResult(result, \"header\", protoHeader, \"pcdex\");\n  addResult(result, \"masterKeyId\", usedMasterKeyId, masterKeyId);\n  addResult256BitBase64(result, \"encryptionSalt\", encryptionSalt);\n  addResult256BitBase64(result, \"insensitiveMacSalt\", insensitiveMacSalt);\n  addResult256BitBase64(result, \"sensitiveMacSalt\", sensitiveMacSalt);\n  addResult(result, \"info\", usedInfo, info);\n\n  const masterKeySecretBuffer = new TextEncoder().encode(masterKeySecret);\n\n  let insensitive;\n  let insensitiveMac;\n\n  try {\n    insensitive = `${protoHeader}|${usedMasterKeyId}|${encryptionSalt}|${usedInfo}|${usedMaskedPhoneNumber}|${insensitiveMacSalt}|`;\n    const insensitiveMacKey = await hkdfSimpleSha256(\n      masterKeySecretBuffer,\n      fromBase64(insensitiveMacSalt)\n    );\n    insensitiveMac = await hmacSha256(insensitiveMacKey, insensitive);\n    addResult(\n      result,\n      \"insensitiveMac\",\n      usedInsensitiveMac,\n      toBase64(insensitiveMac)\n    );\n  } catch (ex) {\n    result.push({\n      name: \"insensitiveMac\",\n      ok: false,\n      value: usedInsensitiveMac,\n      expected: \"N/A\"\n    });\n  }\n\n  try {\n    const insensitiveSigned = `${insensitive}${toBase64(insensitiveMac)}`;\n    const sensitive = `${insensitiveSigned}|${iv}|${encryptedPhoneNumber}|${sensitiveMacSalt}|`;\n    const sensitiveMacKey = await hkdfSimpleSha256(\n      masterKeySecretBuffer,\n      fromBase64(sensitiveMacSalt)\n    );\n    const sensitiveMac = await hmacSha256(sensitiveMacKey, sensitive);\n    addResult(result, \"sensitiveMac\", usedSensitiveMac, toBase64(sensitiveMac));\n  } catch (ex) {\n    result.push({\n      name: \"sensitiveMac\",\n      ok: false,\n      value: usedSensitiveMac,\n      expected: \"N/A\"\n    });\n  }\n\n  let usedPhoneNumber;\n\n  try {\n    const decryptionKey = await hkdfSimpleSha256(\n      masterKeySecretBuffer,\n      fromBase64(encryptionSalt)\n    );\n    usedPhoneNumber = await aesCbcDecrypt(\n      decryptionKey,\n      fromBase64(iv),\n      fromBase64(encryptedPhoneNumber)\n    );\n    addResult(result, \"phoneNumber\", usedPhoneNumber, phoneNumber);\n  } catch (ex) {\n    result.push({\n      name: \"phoneNumber\",\n      ok: false,\n      value: \"N/A\",\n      expected: phoneNumber\n    });\n  }\n\n  const maskedPhoneNumber =\n    phoneNumber.slice(0, 3) + \"********\" + phoneNumber.slice(-2);\n\n  try {\n    addResult(\n      result,\n      \"maskedPhoneNumber\",\n      usedMaskedPhoneNumber,\n      maskedPhoneNumber\n    );\n  } catch (ex) {\n    result.push({\n      name: \"maskedPhoneNumber\",\n      ok: false,\n      value: \"N/A\",\n      expected: maskedPhoneNumber\n    });\n  }\n\n  return result;\n}\n\nfunction addResult(result, name, value, expected) {\n  result.push({\n    name,\n    ok: value === expected,\n    value: \"\" + value,\n    expected: \"\" + expected\n  });\n}\n\nfunction addResult256BitBase64(result, name, value) {\n  try {\n    const decoded = fromBase64(\"\" + value);\n\n    if (decoded.length !== 32) {\n      result.push({\n        name,\n        ok: false,\n        value: \"\" + decoded.length * 8 + \" bits\",\n        expected: \"256 bits\"\n      });\n    } else {\n      result.push({ name, ok: true, value: \"256 bits\", expected: \"256 bits\" });\n    }\n  } catch (ex) {\n    result.push({ name, ok: false, value, expected: \"valid 256 bits base64\" });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nexport class TextWithExplanation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hovered: false,\n      modalOpen: false\n    };\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ hovered: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ hovered: false });\n  };\n\n  handleClick = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  render() {\n    const { header, body } = this.props;\n    const { hovered, modalOpen } = this.state;\n\n    const color = hovered ? \"#0000EE\" : \"inherit\";\n    const textDecoration = hovered ? \"underline\" : \"inherit\";\n\n    return (\n      <>\n        <span\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          onClick={this.handleClick}\n          style={{ cursor: \"pointer\", color, textDecoration }}\n        >\n          {this.props.children}\n        </span>\n\n        <Modal show={modalOpen} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{header}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{body}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { TextWithExplanation } from \"./TextWithExplanation\";\n\nexport class ResponseWithExplanation extends Component {\n  render() {\n    const { response } = this.props;\n    if (!response) return null;\n\n    const split = response.split(\"|\");\n\n    return (\n      <div className=\"text-break border rounded mb-3 p-1 text-monospace\">\n        <Explanation\n          name=\"pcdex\"\n          header=\"Protocol Header\"\n          body={\n            <div>\n              Identifies the used encryption scheme. Must always be{\" \"}\n              <code>pcdex</code>, for Privacy Compliant Data EXchange.\n            </div>\n          }\n        >\n          {split[0]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"masterKeyId\"\n          header=\"Master Key ID\"\n          body={\n            <div>\n              Identifies the master key to use. The key ID change every time we\n              rotate the master key.\n            </div>\n          }\n        >\n          {split[1]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"encryptionSalt\"\n          header=\"Encryption Key Salt\"\n          body={\n            <div>\n              Salt value used to derive the encryption key from the master key\n              with HKDF.\n            </div>\n          }\n        >\n          {split[2]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"info\"\n          header=\"Info Field\"\n          body=\"Exact copy of the input from the API caller. Used to prevent replay attacks.\"\n        >\n          {split[3]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"maskedPhoneNumber\"\n          header=\"Masked Phone Number\"\n          body=\"Phone number with only the first and the last digits visible. Used for displaying on the screen if the app is not allowed to decode the plain text phone number.\"\n        >\n          {split[4]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"insensitiveMacSalt\"\n          header=\"Insensitive MAC Salt\"\n          body=\"Salt value used to derive a signing key from the master key with HKDF. This signing key is used to sign the privacy insensitive parts of the response. Every field before and including this field is not considered insensitive. The insensitive fields are only signed, but not encrypted.\"\n        >\n          {split[5]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"insensitiveMac\"\n          header=\"Insensitive MAC\"\n          body=\"Signature of the privacy insensitive parts of the response. Every field before and including this field is not considered insensitive. Used to prevent an attacker from tampering with the insensitive values. The insensitive fields are only signed, but not encrypted.\"\n        >\n          {split[6]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"iv\"\n          header=\"AES CBC IV\"\n          body=\"Initialization vector used to encrypt the privacy sensitive fields of the response.\"\n        >\n          {split[7]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"encryptedPhoneNumber\"\n          header=\"Encrypted Phone Number\"\n          body=\"Phone number encrypted with the encryption key derived from the master key and the Encryption Key Salt and the AES CBC IV as Initialization vectors.\"\n        >\n          {split[8]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"sensitiveMacSalt\"\n          header=\"Sensitive MAC Salt\"\n          body=\"Salt value used to derive a signing key from the master key with HKDF. This signing key is used to sign the complete response.\"\n        >\n          {split[9]}\n        </Explanation>\n        |\n        <Explanation\n          name=\"sensitiveMac\"\n          header=\"Sensitive MAC\"\n          body=\"Signature of the complete response. Used to prevent an attacker from tampering with the response values.\"\n        >\n          {split[10]}\n        </Explanation>\n      </div>\n    );\n  }\n}\n\nclass Explanation extends Component {\n  render() {\n    const { name, header, ...others } = this.props;\n    return (\n      <TextWithExplanation\n        header={\n          <>\n            {header} <code>{name}</code>\n          </>\n        }\n        {...others}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { verifyResponse } from \"../pcdex/verifyResponse\";\nimport { ResponseWithExplanation } from \"./ResponseWithExplanation\";\n\nexport class Client extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      value:\n        props.value ||\n        \"pcdex|1|gApolmHprIlcF3QlIKf1fMDyen8nktpybEIoaPc3WNc=|1.2345682938.1584265462|+91********79|43MeuaBLyclsVJy2hTZoJ/GmrA/1cLqZXs9FVwCX46M=|n9Kke7PBcjOyFQ6Im4pBu9yE9KAvWuUdWWFtcXfUW4M=|ioj1z1u/URkj1jCbwJbRmA==|UCJSLsC9U8Fy9AS5ESB4fg==|ffMZRJnCOGgscp3Eds34Xh5gdG4vGqucPz3yXsng1l4=|iHbbbHkN9uaev/YOB1RNUGK0CkuBV2CcU4za+6EKGww=\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value }, () => this.verifyEncrypted());\n  };\n\n  verifyEncrypted = async () => {\n    const { masterKeyId, masterKeySecret, phoneNumber, info } = this.props;\n\n    const result = await verifyResponse({\n      masterKeyId,\n      masterKeySecret,\n      phoneNumber,\n      info,\n      encryptedHeaders: this.state.value\n    });\n    this.setState({ result });\n  };\n\n  componentDidMount() {\n    this.verifyEncrypted();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.masterKeyId !== this.props.masterKeyId ||\n      prevProps.masterKeySecret !== this.props.masterKeySecret ||\n      prevProps.phoneNumber !== this.props.phoneNumber ||\n      prevProps.info !== this.props.info ||\n      prevState.value !== this.state.value\n    ) {\n      this.verifyEncrypted();\n    }\n  }\n\n  render() {\n    const { result } = this.state;\n    const value = this.props.value || this.state.value || \"\";\n\n    return (\n      <>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Encrypted</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            as=\"textarea\"\n            rows={4}\n            className=\"text-monospace\"\n            value={value}\n            onChange={this.handleChange}\n          />\n        </InputGroup>\n        <Results result={result} />\n        <ResponseWithExplanation response={value} />\n      </>\n    );\n  }\n}\n\nclass Results extends Component {\n  render() {\n    const { result } = this.props;\n\n    if (!result) return null;\n\n    return result.map(line => <Result key={line.name} {...line} />);\n  }\n}\n\nclass Result extends Component {\n  render() {\n    const { name, ok, value, expected } = this.props;\n\n    const icon = ok ? faCheck : faTimes;\n    const colorClass = ok ? \"text-success\" : \"text-danger\";\n    const text = ok ? value : `${value} (expected: ${expected})`;\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>{name}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl readOnly value={text} />\n        <InputGroup.Append>\n          <InputGroup.Text>\n            <FontAwesomeIcon className={colorClass} icon={icon} />\n          </InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  }\n}\n","import {\n  randomNonce256,\n  hkdfSimpleSha256,\n  aesCbcEncrypt,\n  hmacSha256\n} from \"../utils/crypto\";\nimport { toBase64 } from \"../utils/base64\";\n\nexport async function createResponse({\n  masterKeyId,\n  masterKeySecret,\n  phoneNumber,\n  info\n}) {\n  const masterKeySecretBuffer = new TextEncoder().encode(masterKeySecret);\n\n  const encryptionSalt = await randomNonce256();\n  const encryptionKey = await hkdfSimpleSha256(\n    masterKeySecretBuffer,\n    encryptionSalt\n  );\n\n  const { iv, encrypted: encryptedPhoneNumber } = await aesCbcEncrypt(\n    encryptionKey,\n    phoneNumber\n  );\n\n  const maskedPhoneNumber =\n    phoneNumber.slice(0, 3) + \"********\" + phoneNumber.slice(-2);\n\n  const insensitiveMacSalt = await randomNonce256();\n  const insensitiveMacKey = await hkdfSimpleSha256(\n    masterKeySecretBuffer,\n    insensitiveMacSalt\n  );\n  const insensitive = `pcdex|${masterKeyId}|${toBase64(\n    encryptionSalt\n  )}|${info}|${maskedPhoneNumber}|${toBase64(insensitiveMacSalt)}|`;\n  const insensitiveMac = await hmacSha256(insensitiveMacKey, insensitive);\n  const insensitiveSigned = `${insensitive}${toBase64(insensitiveMac)}`;\n\n  const sensitiveMacSalt = await randomNonce256();\n  const sensitiveMacKey = await hkdfSimpleSha256(\n    masterKeySecretBuffer,\n    sensitiveMacSalt\n  );\n  const sensitive = `${insensitiveSigned}|${toBase64(iv)}|${toBase64(\n    encryptedPhoneNumber\n  )}|${toBase64(sensitiveMacSalt)}|`;\n  const sensitiveMac = await hmacSha256(sensitiveMacKey, sensitive);\n  const sensitiveSigned = `${sensitive}${toBase64(sensitiveMac)}`;\n\n  return {\n    result: sensitiveSigned,\n    debugInfo: {\n      info,\n      maskedPhoneNumber,\n      encryptionSalt: toBase64(encryptionSalt),\n      encryptionKey: toBase64(encryptionKey),\n      iv: toBase64(iv),\n      encryptedPhoneNumber: toBase64(encryptedPhoneNumber),\n      insensitiveMacSalt: toBase64(insensitiveMacSalt),\n      insensitiveMacKey: toBase64(insensitiveMacKey),\n      insensitive,\n      insensitiveMac: toBase64(insensitiveMac),\n      insensitiveSigned,\n      sensitiveMacSalt: toBase64(sensitiveMacSalt),\n      sensitiveMacKey: toBase64(sensitiveMacKey),\n      sensitive,\n      sensitiveMac: toBase64(sensitiveMac),\n      sensitiveSigned\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport { Form, InputGroup, FormControl } from \"react-bootstrap\";\n\nexport class ResponseDebugInfo extends Component {\n  render() {\n    const { debugInfo } = this.props;\n    if (!debugInfo) return null;\n\n    const {\n      maskedPhoneNumber,\n      encryptionSalt,\n      insensitiveMacSalt,\n      encryptedPhoneNumber,\n      sensitiveMacKey,\n      sensitive,\n      insensitiveMacKey,\n      insensitiveMac,\n      iv,\n      insensitive,\n      encryptionKey,\n      sensitiveMacSalt,\n      sensitiveMac\n    } = debugInfo;\n\n    return (\n      <>\n        <Field\n          name=\"maskedPhoneNumber\"\n          value={maskedPhoneNumber}\n          code=\"\"\n          description=\"Phone number with the middle numbers masked. Privacy safe for display purposes\"\n        />\n        <Field\n          name=\"encryptionSalt\"\n          value={encryptionSalt}\n          code=\"random 256bits\"\n          description=\"Salt used to derive encryptionKey from masterKey\"\n        />\n        <Field\n          name=\"encryptionKey\"\n          value={encryptionKey}\n          code=\"hmac-sha256(encryptionSalt, masterKey)\"\n          description=\"Key used to encrypt the phone number. This field is not part of the response\"\n        />\n        <Field\n          name=\"insensitiveMacSalt\"\n          value={insensitiveMacSalt}\n          code=\"random 256bits\"\n          description=\"Salt used to derive insensitiveMacKey from masterKey\"\n        />\n        <Field\n          name=\"insensitiveMacKey\"\n          value={insensitiveMacKey}\n          code=\"hmac-sha256(insensitiveMacSalt, masterKey)\"\n          description=\"HMAC-SHA256 signature key of the insentive parts of the response. This field is not part of the response\"\n        />\n        <Field\n          name=\"insensitive\"\n          value={insensitive}\n          code=\"pcdex | masterKeyId | encryptionSalt | info | maskedPhoneNumber | insensitiveMacSalt |\"\n          description=\"Insensitive data in the response, signed with insensitiveMacKey\"\n        />\n        <Field\n          name=\"insensitiveMac\"\n          value={insensitiveMac}\n          code=\"hmac-sha256(insensitiveMacKey, insensitive)\"\n          description=\"HMAC-SHA256 signature of the insensitive parts of the response\"\n        />\n        <Field\n          name=\"iv\"\n          value={iv}\n          code=\"random 128bits\"\n          description=\"Initialization Vector of the AES CBC mode cypher used to encrypt the phone number\"\n        />\n        <Field\n          name=\"encryptedPhoneNumber\"\n          value={encryptedPhoneNumber}\n          code=\"aes-cbc(encryptionKey, iv, phoneNumber)\"\n          description=\"AES CBC encrypted phone number\"\n        />\n        <Field\n          name=\"sensitiveMacSalt\"\n          value={sensitiveMacSalt}\n          code=\"random 256bits\"\n          description=\"Salt used to derive sensitiveMacKey from masterKey\"\n        />\n        <Field\n          name=\"sensitiveMacKey\"\n          value={sensitiveMacKey}\n          code=\"hmac-sha256(sensitiveMacSalt, masterKey)\"\n          description=\"HMAC-SHA256 signature key of the whole response. This field is not part of the response\"\n        />\n        <Field\n          name=\"sensitive\"\n          value={sensitive}\n          code=\"insensitive insensitiveMac | iv | encryptedPhoneNumber | sensitiveMacSalt |\"\n          description=\"The whole response that is considered sensitive. This is signed with sensitiveMacKey\"\n        />\n        <Field\n          name=\"sensitiveMac\"\n          value={sensitiveMac}\n          code=\"hmac-sha256(sensitiveMacKey, sensitive)\"\n          description=\"HMAC-SHA256 signature of the whole response\"\n        />\n      </>\n    );\n  }\n}\n\nclass Field extends Component {\n  render() {\n    const { name, value, code, description } = this.props;\n\n    return (\n      <>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>{name}</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl value={value} readOnly={true} />\n        </InputGroup>\n        <Form.Text className=\"text-muted mb-3\">\n          <code>{code}</code> {description}\n        </Form.Text>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\n\nimport { createResponse } from \"../pcdex/createResponse\";\nimport { ResponseWithExplanation } from \"./ResponseWithExplanation\";\nimport { ResponseDebugInfo } from \"./ResponseDebugInfo\";\n\nexport class Server extends Component {\n  constructor(props) {\n    super();\n    const { defaultPhoneNumber, defaultInfo } = props;\n    this.state = {\n      phoneNumber: defaultPhoneNumber || \"\",\n      info: defaultInfo || \"\",\n      response: \"\",\n      debugInfo: null\n    };\n  }\n\n  handlePhoneNumberChange = event => {\n    this.setState({ phoneNumber: event.target.value }, () =>\n      this.fireOnChange()\n    );\n  };\n\n  handleInfoChange = event => {\n    this.setState({ info: event.target.value }, () => this.fireOnChange());\n  };\n\n  fireOnChange() {\n    const { phoneNumber, info, response, debugInfo } = this.state;\n    this.props.onChange &&\n      this.props.onChange({ phoneNumber, info, response, debugInfo });\n  }\n\n  handleEncryptClick = async event => {\n    event.preventDefault();\n\n    const { phoneNumber, info } = this.state;\n    const { masterKeyId, masterKeySecret } = this.props;\n\n    const response = await createResponse({\n      masterKeyId,\n      masterKeySecret,\n      phoneNumber,\n      info\n    });\n    this.setState(\n      {\n        response: response.result,\n        debugInfo: response.debugInfo\n      },\n      () => this.fireOnChange()\n    );\n  };\n\n  render() {\n    const { response, phoneNumber, info, debugInfo } = this.state;\n\n    return (\n      <Form>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">Phone Number</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type=\"text\"\n            value={phoneNumber}\n            onChange={this.handlePhoneNumberChange}\n          />\n        </InputGroup>\n\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">Info</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type=\"text\"\n            value={info}\n            onChange={this.handleInfoChange}\n          />\n        </InputGroup>\n\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          className=\"mb-3\"\n          onClick={this.handleEncryptClick}\n        >\n          Encrypt Phone Number\n        </Button>\n\n        <ResponseWithExplanation response={response} />\n        <ResponseDebugInfo debugInfo={debugInfo} />\n      </Form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nexport class Shared extends Component {\n  constructor(props) {\n    super();\n    const { defaultMasterKeyId, defaultMasterKeySecret } = props;\n    this.state = {\n      masterKeyId: defaultMasterKeyId || \"\",\n      masterKeySecret: defaultMasterKeySecret || \"\"\n    };\n  }\n\n  handleMasterKeyIdChange = event => {\n    this.setState({ masterKeyId: event.target.value }, () =>\n      this.fireOnChange()\n    );\n  };\n\n  handleMasterKeySecretChange = event => {\n    this.setState({ masterKeySecret: event.target.value }, () =>\n      this.fireOnChange()\n    );\n  };\n\n  fireOnChange() {\n    const { masterKeyId, masterKeySecret } = this.state;\n    this.props.onChange &&\n      this.props.onChange({\n        masterKeyId,\n        masterKeySecret\n      });\n  }\n\n  render() {\n    const { masterKeyId, masterKeySecret } = this.state;\n\n    return (\n      <Form>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">Master Key ID</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type=\"number\"\n            value={masterKeyId}\n            onChange={this.handleMasterKeyIdChange}\n          />\n        </InputGroup>\n\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">\n              Master Key Secret\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type=\"text\"\n            value={masterKeySecret}\n            onChange={this.handleMasterKeySecretChange}\n          />\n        </InputGroup>\n      </Form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { Client } from \"./components/Client\";\nimport { Server } from \"./components/Server\";\nimport { Shared } from \"./components/Shared\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      masterKeyId: \"1\",\n      masterKeySecret: \"JioFBTestShar3dKey1337\",\n      phoneNumber: \"+917555509979\",\n      info: \"1.2345682938.1584265462\",\n      response: \"\"\n    };\n  }\n\n  handleSharedChange = event => {\n    const { masterKeyId, masterKeySecret } = event;\n    this.setState({ masterKeyId, masterKeySecret });\n  };\n\n  handleServerChange = event => {\n    const { phoneNumber, info, response } = event;\n    this.setState({ phoneNumber, info, response });\n  };\n\n  render() {\n    const { masterKeyId, masterKeySecret, phoneNumber, info } = this.state;\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h3>Shared</h3>\n            <p>We agree on these parameters offline</p>\n            <Shared\n              defaultMasterKeyId={masterKeyId}\n              defaultMasterKeySecret={masterKeySecret}\n              onChange={this.handleSharedChange}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h3>Server</h3>\n            <p>Generate a response with the specified phone number and requested info field</p>\n            <Server\n              masterKeyId={masterKeyId}\n              masterKeySecret={masterKeySecret}\n              defaultPhoneNumber={phoneNumber}\n              defaultInfo={info}\n              onChange={this.handleServerChange}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h3>Client</h3>\n            <p>Verify a response by copying it into the field below</p>\n            <Client\n              masterKeyId={masterKeyId}\n              masterKeySecret={masterKeySecret}\n              phoneNumber={phoneNumber}\n              info={info}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}